/**
 * 给工程中的Java源代码添加版权信息
 */
task addCopyRight() << {
    if (project.plugins.hasPlugin("com.android.application")
            || project.plugins.hasPlugin("com.android.library")) {
        project.android.sourceSets.main.java.srcDirs.each { srcDir ->
            dealWithDir(srcDir, true)
        }
    }

    if (project.plugins.hasPlugin("java")) {
        def srcDir = project.projectDir + "/src/main/java"
        dealWithDir(srcDir, true)
    }

    if (project.plugins.hasPlugin("groovy")) {
        def srcDir = project.projectDir + "/src/main/groovy"
        dealWithDir(srcDir, true)
    }
}

/**
 * 给工程中的Java源代码移除版本信息
 */
task removeCopyRight() << {
    if (project.plugins.hasPlugin("com.android.application")
            || project.plugins.hasPlugin("com.android.library")) {
        project.android.sourceSets.main.java.srcDirs.each { srcDir ->
            dealWithDir(srcDir, false)
        }
    }

    if (project.plugins.hasPlugin("java")) {
        def srcDir = project.projectDir + "/src/main/java"
        dealWithDir(srcDir, false)
    }

    if (project.plugins.hasPlugin("groovy")) {
        def srcDir = project.projectDir + "/src/main/groovy"
        dealWithDir(srcDir, false)
    }
}

ext {
    keyWords = "Copyright 2018 iQIYI.com"
    copyRightText = "/**\n" +
            " *\n" +
            " * Copyright 2018 iQIYI.com\n" +
            " *\n" +
            " * Licensed under the Apache License, Version 2.0 (the \"License\");\n" +
            " * you may not use this file except in compliance with the License.\n" +
            " * You may obtain a copy of the License at\n" +
            " *\n" +
            " * http://www.apache.org/licenses/LICENSE-2.0\n" +
            " *\n" +
            " * Unless required by applicable law or agreed to in writing, software\n" +
            " * distributed under the License is distributed on an \"AS IS\" BASIS,\n" +
            " * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n" +
            " * See the License for the specific language governing permissions and\n" +
            " * limitations under the License.\n" +
            " *\n" +
            " */"
}

/**
 * 扫描目录下的每一个文件，给Java文件添加上版权信息
 * @param dir
 * @param isAdd
 */
def dealWithDir(File dir, boolean isAdd) {
    File[] files = dir.listFiles()
    if (files == null || files.length <= 0) {
        return
    }

    files.each { file ->
        if (file.isDirectory()) {
            dealWithDir(file, isAdd)
        } else if (file.isFile()) {
            if (file.name.endsWith(".java") || file.name.endsWith(".groovy")) {
                processSource(file, isAdd)
            }
        }
    }
}

/**
 * 处理Java或Groovy源文件
 * @param source
 * @param isAdd
 */
def processSource(File source, boolean isAdd) {
    if (isAdd) {
        addLicense(source)
    } else {
        removeLicense(source)
    }
}

/**
 * 添加License
 * @param source
 */
def addLicense(File source) {
    String content = source.getText("utf-8")
    if (content != null && content.contains(keyWords)) {
        println "file already processed, ${source.absolutePath}"
        return
    }

    println "add copyright to file ${source.absolutePath}"

    source.withWriter("utf-8", { writer ->
        writer.write(copyRightText)
        writer.write("\n\n")
        writer.write(content)
    })
}

/**
 * 移除License
 * @param source
 */
def removeLicense(File source) {
    String content = source.getText("utf-8")
    if (content != null && content.contains(keyWords)) {
        content = content.replace(keyWords, "")
    }

    source.withWriter("utf-8", { writer ->
        def canWrite = false
        content.eachLine { line ->
            if (line.startsWith("package") && line.split("[.]").length > 2) {
                canWrite = true
            }

            if (canWrite) {
                writer.write(line)
                writer.write("\n")
            }
        }
    })
}