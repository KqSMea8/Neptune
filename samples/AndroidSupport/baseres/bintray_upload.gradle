apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'


def siteUrl = 'https://github.com/iqiyi/Neptune' // 项目的主页
def gitUrl = 'https://github.com/iqiyi/Neptune' // Git仓库的url
def issueUrl = 'https://github.com/iqiyi/Neptune/issues' // 项目的issues

group = GROUP_ID
archivesBaseName = ARTIFACT_ID
version = VERSION

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom.project {
            name = POM_NAME
            artifactId = ARTIFACT_ID
            packaging POM_PACKAGING
            // Add your description here
            description POM_DESCRIPTION
            url siteUrl
            // Set your license
            licenses {
                license {
                    name 'Apache License 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0'
                }
            }
            developers {
                developer {
                    id 'zjupure'    //填写的一些基本信息
                    name 'IQIYI'
                    email 'zjupure@gmail.com'
                }
            }
            scm {
                connection gitUrl
                developerConnection gitUrl
                url siteUrl
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    options.encoding = "utf-8"
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    //archives javadocJar
    archives sourcesJar
}

def getBintrayUsername() {
    return hasProperty('bintray.user') ? property('bintray.user') : System.getenv('BINTRAY_USERNAME')
}

def getBintrayApiKey() {
    return hasProperty('bintray.apikey') ? property('bintray.apikey') : System.getenv('BINTRAY_API_KEY')
}

bintray {
    user = getBintrayUsername()
    key = getBintrayApiKey()
    configurations = ['archives']
    pkg {
        repo = "neptune"
        name = ARCHIVE_NAME    //发布到JCenter上的项目名字
        desc = POM_DESCRIPTION
        websiteUrl = siteUrl
        issueTrackerUrl = issueUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        override = true
        publish = true
        publicDownloadNumbers = true
    }
}

afterEvaluate {
    Task upload = project.tasks.getByName("bintrayUpload")
    Task build = project.tasks.getByName("build")
    Task install = project.tasks.getByName("install")

    upload.dependsOn(install)
    upload.dependsOn(build)
}